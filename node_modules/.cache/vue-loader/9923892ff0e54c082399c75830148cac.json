{"remainingRequest":"/Users/jiale/development/front/map-vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiale/development/front/map-vue-demo/src/components/Sticky/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiale/development/front/map-vue-demo/src/components/Sticky/index.vue","mtime":1669083005256},{"path":"/Users/jiale/development/front/map-vue-demo/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/jiale/development/front/map-vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jiale/development/front/map-vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1N0aWNreScsCiAgICBwcm9wczogewogICAgICBzdGlja3lUb3A6IHsKICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgZGVmYXVsdDogMAogICAgICB9LAogICAgICB6SW5kZXg6IHsKICAgICAgICB0eXBlOiBOdW1iZXIsCiAgICAgICAgZGVmYXVsdDogMQogICAgICB9LAogICAgICBjbGFzc05hbWU6IHsKICAgICAgICB0eXBlOiBTdHJpbmcsCiAgICAgICAgZGVmYXVsdDogJycKICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgYWN0aXZlOiBmYWxzZSwKICAgICAgICBwb3NpdGlvbjogJycsCiAgICAgICAgd2lkdGg6IHVuZGVmaW5lZCwKICAgICAgICBoZWlnaHQ6IHVuZGVmaW5lZCwKICAgICAgICBpc1N0aWNreTogZmFsc2UsCiAgICAgICAgc2Nyb2xsRG9tOiBudWxsCiAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICB0aGlzLnNjcm9sbERvbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkcmF3ZXItd3JhcCAuZWwtZHJhd2VyX19ib2R5JykKCiAgICAgIHRoaXMuaGVpZ2h0ID0gdGhpcy4kZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0CiAgICAgIHRoaXMuc2Nyb2xsRG9tLmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuaGFuZGxlU2Nyb2xsKQogICAgICB0aGlzLnNjcm9sbERvbS5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLmhhbmRsZVJlc2l6ZSkKICAgIH0sCiAgICBhY3RpdmF0ZWQoKSB7CiAgICAgIHRoaXMuaGFuZGxlU2Nyb2xsKCkKICAgIH0sCiAgICBkZXN0cm95ZWQoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdkZXN0cm95ZWQnKQogICAgICB0aGlzLnNjcm9sbERvbS5yZW1vdmVFdmVudExpc3RlbmVyKCdzY3JvbGwnLCB0aGlzLmhhbmRsZVNjcm9sbCkKICAgICAgdGhpcy5zY3JvbGxEb20ucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5oYW5kbGVSZXNpemUpCiAgICB9LAogICAgbWV0aG9kczogewogICAgICBzdGlja3koKSB7CiAgICAgICAgaWYgKHRoaXMuYWN0aXZlKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgdGhpcy5wb3NpdGlvbiA9ICdmaXhlZCcKICAgICAgICB0aGlzLmFjdGl2ZSA9IHRydWUKICAgICAgICB0aGlzLndpZHRoID0gdGhpcy53aWR0aCArICdweCcKICAgICAgICB0aGlzLmlzU3RpY2t5ID0gdHJ1ZQogICAgICB9LAogICAgICBoYW5kbGVSZXNldCgpIHsKICAgICAgICBpZiAoIXRoaXMuYWN0aXZlKSB7CiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgdGhpcy5yZXNldCgpCiAgICAgIH0sCiAgICAgIHJlc2V0KCkgewogICAgICAgIHRoaXMucG9zaXRpb24gPSAnJwogICAgICAgIHRoaXMud2lkdGggPSAnYXV0bycKICAgICAgICB0aGlzLmFjdGl2ZSA9IGZhbHNlCiAgICAgICAgdGhpcy5pc1N0aWNreSA9IGZhbHNlCiAgICAgIH0sCiAgICAgIGhhbmRsZVNjcm9sbCgpIHsKICAgICAgICBjb25zdCB3aWR0aCA9IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoCiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoIHx8ICdhdXRvJwogICAgICAgIGNvbnN0IG9mZnNldFRvcCA9IHRoaXMuJGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcAogICAgICAgIGNvbnNvbGUubG9nKG9mZnNldFRvcCkKCiAgICAgICAgaWYgKG9mZnNldFRvcCA8IHRoaXMuc3RpY2t5VG9wKSB7CiAgICAgICAgICB0aGlzLnN0aWNreSgpCiAgICAgICAgICBpZiAob2Zmc2V0VG9wID09PSAwKSB7CiAgICAgICAgICAgIHRoaXMuaGFuZGxlUmVzZXQoKQogICAgICAgICAgfQogICAgICAgICAgcmV0dXJuCiAgICAgICAgfQogICAgICAgIHRoaXMuaGFuZGxlUmVzZXQoKQogICAgICB9LAogICAgICBoYW5kbGVSZXNpemUoKSB7CiAgICAgICAgaWYgKHRoaXMuaXNTdGlja3kpIHsKICAgICAgICAgIHRoaXMud2lkdGggPSB0aGlzLiRlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS53aWR0aCArICdweCcKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Sticky","sourcesContent":["<template>\n  <div :style=\"{ height: height + 'px', zIndex: zIndex }\">\n    <div\n      :class=\"className\"\n      :style=\"{\n        top: isSticky ? stickyTop + 'px' : '',\n        zIndex: zIndex,\n        position: position,\n        width: width,\n        height: height + 'px'\n      }\"\n    >\n      <slot>\n        <div>sticky</div>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'Sticky',\n    props: {\n      stickyTop: {\n        type: Number,\n        default: 0\n      },\n      zIndex: {\n        type: Number,\n        default: 1\n      },\n      className: {\n        type: String,\n        default: ''\n      }\n    },\n    data() {\n      return {\n        active: false,\n        position: '',\n        width: undefined,\n        height: undefined,\n        isSticky: false,\n        scrollDom: null\n      }\n    },\n    mounted() {\n      this.scrollDom = document.querySelector('#drawer-wrap .el-drawer__body')\n\n      this.height = this.$el.getBoundingClientRect().height\n      this.scrollDom.addEventListener('scroll', this.handleScroll)\n      this.scrollDom.addEventListener('resize', this.handleResize)\n    },\n    activated() {\n      this.handleScroll()\n    },\n    destroyed() {\n      console.log('destroyed')\n      this.scrollDom.removeEventListener('scroll', this.handleScroll)\n      this.scrollDom.removeEventListener('resize', this.handleResize)\n    },\n    methods: {\n      sticky() {\n        if (this.active) {\n          return\n        }\n        this.position = 'fixed'\n        this.active = true\n        this.width = this.width + 'px'\n        this.isSticky = true\n      },\n      handleReset() {\n        if (!this.active) {\n          return\n        }\n        this.reset()\n      },\n      reset() {\n        this.position = ''\n        this.width = 'auto'\n        this.active = false\n        this.isSticky = false\n      },\n      handleScroll() {\n        const width = this.$el.getBoundingClientRect().width\n        this.width = width || 'auto'\n        const offsetTop = this.$el.getBoundingClientRect().top\n        console.log(offsetTop)\n\n        if (offsetTop < this.stickyTop) {\n          this.sticky()\n          if (offsetTop === 0) {\n            this.handleReset()\n          }\n          return\n        }\n        this.handleReset()\n      },\n      handleResize() {\n        if (this.isSticky) {\n          this.width = this.$el.getBoundingClientRect().width + 'px'\n        }\n      }\n    }\n  }\n</script>\n"]}]}